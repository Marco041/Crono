<UserControl x:Class="Crono.Views.TaskDetails"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Crono.Views"
             xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:model="clr-namespace:Crono.Model"
             xmlns:l="clr-namespace:Crono.Converter"
             mc:Ignorable="d" DataContext="{Binding Path=DetailsTaskViewModel, Source={StaticResource Locator}}">
    <UserControl.Resources>
        <l:MaxheightModalConverter x:Key="MaxheightModalConverter"></l:MaxheightModalConverter>
        <l:TupleToDateIntervalConverter x:Key="TupleToDateIntervalConverter"></l:TupleToDateIntervalConverter>
        <l:VisibilityConverter x:Key="VisibilityConverter"></l:VisibilityConverter>
        <l:InVisibilityConverter x:Key="InVisibilityConverter"></l:InVisibilityConverter>
        <l:NotConverter x:Key="NotConverter"></l:NotConverter>
    </UserControl.Resources>
    <!-- Modal with details or new task creation-->
    <materialDesign:DialogHost
                      IsOpen="{Binding IsOpenModalNewTask}"
                      CloseOnClickAway="True">
        <materialDesign:DialogHost.DialogContent >
            <Border BorderThickness="2" BorderBrush="LightGreen" MinWidth="256" MinHeight="256" ClipToBounds="True" Panel.ZIndex="100000" MaxHeight="{Binding Height, RelativeSource={RelativeSource AncestorType=Window}, Converter={StaticResource MaxheightModalConverter}}">
                <ScrollViewer VerticalScrollBarVisibility="Auto">
                <Grid Width="350" Margin="8,8,8,8">
                    <Grid.Resources>
                        <Style TargetType="CheckBox" BasedOn="{StaticResource MaterialDesignCheckBox}">
                            <Setter Property="Margin" Value="8,8,10,8" />
                        </Style>
                        <Style TargetType="TextBox" BasedOn="{StaticResource MaterialDesignTextBox}">
                            <Setter Property="materialDesign:HintAssist.IsFloating" Value="True" />
                            <Setter Property="Margin" Value="8,8,8,8" />
                        </Style>
                    </Grid.Resources>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>
                    <TextBlock
                            Grid.Column="0"
                            Grid.Row="0"
                            Style="{StaticResource MaterialDesignTitleTextBlock}"
                            Margin="8,8,8,16">
                            Details
                    </TextBlock>
                    <TextBox
                        Width="250"
                        Height="50"
                        Margin="10,10,0,10"
                        Grid.Column="0"
                        Grid.Row="1"
                        materialDesign:HintAssist.Hint="Phase name"
                        IsReadOnly="{Binding EditMode, Converter={StaticResource NotConverter}}"
                        Text="{Binding NewTask.Intervento}" />
                    <TextBox
                        Width="250"
                        Height="50"
                        Margin="10,0,10,10"
                        Grid.Column="0"
                        Grid.Row="2"
                        IsReadOnly="True"
                        materialDesign:HintAssist.Hint="Code"
                        Text="{Binding NewTask.CodiceCommessa}" />

                        <ComboBox Visibility="{Binding ShowCombo, Converter={StaticResource VisibilityConverter}}" materialDesign:HintAssist.Hint="Periodo della fase" Width="250" Grid.Column="0" Grid.Row="3" ItemsSource="{Binding PeriodList}" SelectedItem="{Binding SelectedPeriod, Mode=TwoWay}" Style="{StaticResource MaterialDesignFloatingHintComboBox}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <Label Content="{Binding Converter={StaticResource TupleToDateIntervalConverter}}"></Label>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>

                        <StackPanel Orientation="Vertical" Grid.Column="0" Grid.Row="4" Visibility="{Binding ShowDetails, Converter={StaticResource VisibilityConverter}}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"></RowDefinition>
                                    <RowDefinition Height="auto"></RowDefinition>
                                    <RowDefinition Height="auto"></RowDefinition>
                                    <RowDefinition Height="auto"></RowDefinition>
                                    <RowDefinition Height="auto"></RowDefinition>
                                </Grid.RowDefinitions>
                            </Grid>
                            <DatePicker
                        Width="250"
                        Height="40"
                        Margin="10,20,10,10"
                        Grid.Column="0"
                        Grid.Row="0"
                        materialDesign:HintAssist.Hint="Start"
                        IsEnabled="{Binding EditMode}"
                        Style="{StaticResource MaterialDesignFloatingHintDatePicker}" SelectedDate="{Binding NewTask.StartDate}" />
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <RadioButton Margin="5,1,5,1" IsEnabled="{Binding EditMode}"
                                Style="{StaticResource MaterialDesignRadioButton}"
                                Tag="End date" IsChecked="{Binding EndDateModality}">
                                End date
                            </RadioButton>
                                <RadioButton Margin="5,1,5,1" IsEnabled="{Binding EditMode}"
                                Style="{StaticResource MaterialDesignRadioButton}" 
                                Tag="Duration in days" IsChecked="{Binding DurationModality}">
                                Duration
                            </RadioButton>
                        </StackPanel>
                            <DatePicker
                        Width="250"
                        Grid.Column="0"
                        Grid.Row="1"
                        Height="40"
                        Margin="10,20,10,10"
                        IsEnabled="{Binding EditMode}"
                        materialDesign:HintAssist.Hint="End date" Visibility="{Binding EndDateModality, Converter={StaticResource VisibilityConverter}}"
                        Style="{StaticResource MaterialDesignFloatingHintDatePicker}" SelectedDate="{Binding NewTask.EndDate}" />

                    <TextBox
                        Width="250"
                        Grid.Column="0"
                        Grid.Row="1"
                        Height="40"
                        Margin="10,20,10,10"
                        IsReadOnly="{Binding EditMode, Converter={StaticResource NotConverter}}"
                        materialDesign:ValidationAssist.OnlyShowOnFocus="True"
                        materialDesign:HintAssist.Hint="Days" Visibility="{Binding DurationModality, Converter={StaticResource VisibilityConverter}}"
                        Text="{Binding NewTask.Duration}" />

                            <Grid Grid.Row="2" Margin="5,5,5,5" MaxHeight="300" Name="G1" Visibility="{Binding EnableNewTaskCreation, Converter={StaticResource VisibilityConverter}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Grid.Row="0" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Margin="10,10,20,5">
                                    Constraints:
                                    </TextBlock>

                                    <StackPanel Orientation="Horizontal" Margin="5,10,10,10" Visibility="{Binding IsConstraintVisible, Converter={StaticResource VisibilityConverter}}">
                                        <ComboBox IsEnabled="{Binding EditMode}" materialDesign:HintAssist.Hint="New task" Width="150" ItemsSource="{Binding Alltask}" SelectedItem="{Binding SelectedConstraint, Mode=TwoWay}" Style="{StaticResource MaterialDesignFloatingHintComboBox}">
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <Label Content="{Binding Intervento}"></Label>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>
                                        <Button IsEnabled="{Binding EditMode}" ToolTip="Add constraints" Grid.Column="1" Style="{StaticResource MaterialDesignFlatButton}" Command="{Binding DataContext.AddConstraintCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" Width="22" Height="28" BorderBrush="Green" BorderThickness="1,1,1,1" Margin="15,0,0,0">
                                            <materialDesign:PackIcon Kind="Plus" Foreground="Green" Margin="-14,0,0,0" />
                                        </Button>
                                    </StackPanel>
                                </StackPanel>
                                <!-- TreeView che mostra la gerarchia di vincoli di un task -->
                                <TreeView Grid.Row="1" ItemsSource="{Binding NewTask.Constraints}" x:Name="T1">
                                    <TreeView.ItemTemplate>
                                        <DataTemplate>
                                        <Grid MinWidth="{Binding Source={x:Reference T1}, Path=Width}" HorizontalAlignment="Stretch">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto"></ColumnDefinition>
                                                <ColumnDefinition Width="*"></ColumnDefinition>
                                            </Grid.ColumnDefinitions>
                                            <materialDesign:ColorZone Grid.Column="0" HorizontalAlignment="Left" Mode="Accent" CornerRadius="4" materialDesign:ShadowAssist.ShadowDepth="Depth1" Margin="1">
                                                <TextBlock MinWidth="40" MaxWidth="150"
                                                                    FontSize="12"
                                                                    Margin="10 3 10 3"
                                                                    VerticalAlignment="Center"
                                                                    HorizontalAlignment="Center"
                                                                    FontStyle="Italic"
                                                                    Text="{Binding Intervento}" >
                                                </TextBlock>
                                            </materialDesign:ColorZone>
                                                <Button Visibility="{Binding DataContext.EditMode, Converter={StaticResource VisibilityConverter},RelativeSource={RelativeSource AncestorType=UserControl}}" Grid.Column="1" Style="{StaticResource MaterialDesignFlatButton}" Command="{Binding DataContext.DeleteConstraintCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" CommandParameter="{Binding}" Width="22" Height="25" BorderBrush="Red" BorderThickness="1,1,1,1" Margin="5,0,0,0">
                                                <materialDesign:PackIcon Kind="Delete" Foreground="Red" Margin="-14,0,0,0" />
                                            </Button>
                                        </Grid>
                                        </DataTemplate>
                                    </TreeView.ItemTemplate>
                                </TreeView>
                    </Grid>
                    </StackPanel>
                        <StackPanel Orientation="Horizontal" Grid.Row="5" HorizontalAlignment="Center" Grid.Column="0" Margin="0,10,0,10">
                        <Button 
                            Style="{StaticResource MaterialDesignFlatButton}" BorderBrush="Green" BorderThickness="1,1,1,1"
                            Width="60" Margin="2,2,2,2" 
                            Command="{Binding DataContext.SaveTaskCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" 
                            CommandParameter="{Binding}" Content="Ok">
                        </Button>
                        <Button Style="{StaticResource MaterialDesignFlatButton}" Width="75" Margin="2,2,2,2" BorderBrush="Green" BorderThickness="1,1,1,1"
                            Command="{Binding CloseModalCommand}" Content="Close">
                        </Button>
                    </StackPanel>
                </Grid>
                </ScrollViewer>
            </Border>
        </materialDesign:DialogHost.DialogContent>
    </materialDesign:DialogHost>
</UserControl>
